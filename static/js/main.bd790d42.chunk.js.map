{"version":3,"sources":["store/params.slice.js","api/reports.api.js","store/reports.slice.js","components/CircularProgress.js","components/ChartCountry.js","components/ChartDate.js","components/ChartProvince.js","components/Title.js","components/Chart.js","store/provinces.slice.js","api/provinces.api.js","components/Form.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["paramsSlice","createSlice","name","initialState","country","date","period","province","totalCases","totalDeaths","reducers","update","state","action","payload","updateDate","updateTotal","actions","updateParams","updateParamsDate","updateParamsTotal","selectParams","params","fetchReportsByCountry","fetch","then","res","json","catch","e","console","error","fetchReportsByProvince","fetchReportsByCountryAction","createAsyncThunk","a","fetchReportsByCountryAndDateAction","Promise","resolve","states","alabama","cases","deaths","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","georgia","guam","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","fetchReportsByProvinceAction","reportsSlice","loading","countryProvinces","countries","provinces","extraReducers","builder","addCase","pending","fulfilled","rejected","selectReportsByCountry","reports","timeline","selectReportsByCountryAndDate","selectReportsByProvince","useStyles","makeStyles","theme","root","display","justifyContent","height","flexGrow","margin","spacing","CircularProgress","classes","className","options","scales","yAxes","ticks","beginAtZero","ChartCountry","dispatch","useDispatch","data","useSelector","useState","setState","useEffect","labels","Object","keys","values","shift","baseCase","baseDeath","datasets","label","map","curr","backgroundColor","getElementAtEvent","el","length","index","ChartDate","reduce","acc","concat","ChartProvince","formattedData","newCases","newDeaths","forEach","currIndex","formattedLabels","formattedCases","formattedDeaths","Title","props","Typography","component","variant","color","gutterBottom","children","icon","marginRight","Chart","IconButton","onClick","fetchProvincesAction","undefined","provincesSlice","value","selectProvinces","periods","formControl","marginBottom","width","Form","React","formik","useFormik","initialValues","onSubmit","handleChange","newState","submitForm","handleSubmit","FormControl","InputLabel","htmlFor","Select","id","onChange","target","disabled","native","Autocomplete","getOptionLabel","option","renderInput","TextField","capitalize","appBarSpacer","mixins","toolbar","container","paddingTop","paddingBottom","content","overflow","paper","padding","flexDirection","App","CssBaseline","AppBar","position","Toolbar","noWrap","Container","maxWidth","Grid","item","xs","md","lg","Paper","store","configureStore","reducer","paramsReducer","provincesReducer","reportsReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd790d42.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  country: '',\n  date: '',\n  period: 0,\n  province: '',\n  totalCases: 0,\n  totalDeaths: 0,\n};\n\nexport const paramsSlice = createSlice({\n  name: 'params',\n  initialState,\n  reducers: {\n    update: (state, action) => {\n      const {country, period, province} = action.payload;\n      state.country = country;\n      state.date = '';\n      state.period = period;\n      state.province = province;\n      state.totalCases = 0;\n      state.totalDeaths = 0;\n    },\n    updateDate: (state, action) => {\n      state.date = action.payload;\n    },\n    updateTotal: (state, action) => {\n      state.totalCases = action.payload.totalCases;\n      state.totalDeaths = action.payload.totalDeaths;\n    },\n  },\n});\n\nexport const { update: updateParams, updateDate: updateParamsDate, updateTotal: updateParamsTotal } = paramsSlice.actions;\n\nexport const selectParams = (state) => state.params;\n\nexport default paramsSlice.reducer;\n","export function fetchReportsByCountry(country, period) {\n  return fetch(`https://corona.lmao.ninja/v2/historical/${country}?lastdays=${period + 1}`)\n    .then(res => res.json())\n    .catch(e => console.error(e));\n}\n\nexport function fetchReportsByCountryAndDate() {\n  return new Promise((resolve) =>\n    resolve({\n      date: '01/01/2021',\n      states: {\n        alabama: { cases: 1232, deaths: 1 },\n        alaska: { cases: 39, deaths: 2 },\n        'american samoa': { cases: 291, deaths: 3 },\n        arizona: { cases: 298, deaths: 4 },\n        arkansas: { cases: 123, deaths: 5 },\n        california: { cases: 372, deaths: 6 },\n        colorado: { cases: 23, deaths: 7 },\n        connecticut: { cases: 18, deaths: 8 },\n        delaware: { cases: 292, deaths: 9 },\n        'diamond princess': { cases: 27, deaths: 10 },\n        'district of columbia': { cases: 99, deaths: 11 },\n        florida: { cases: 282, deaths: 12 },\n        georgia: { cases: 999, deaths: 13 },\n        'grand princess': { cases: 289, deaths: 14 },\n        guam: { cases: 456, deaths: 15 },\n        hawaii: { cases: 278, deaths: 16 },\n        idaho: { cases: 673, deaths: 17 },\n        illinois: { cases: 92, deaths: 18 },\n        indiana: { cases: 198, deaths: 19 },\n        iowa: { cases: 38, deaths: 20 },\n        kansas: { cases: 382, deaths: 21 },\n        kentucky: { cases: 43, deaths: 22 },\n        louisiana: { cases: 8, deaths: 23 },\n        maine: { cases: 393, deaths: 24 },\n        maryland: { cases: 393, deaths: 25 },\n        massachusetts: { cases: 484, deaths: 26 },\n        michigan: { cases: 399, deaths: 28 },\n        minnesota: { cases: 59, deaths: 29 },\n        mississippi: { cases: 10, deaths: 30 },\n        missouri: { cases: 4, deaths: 31 },\n        montana: { cases: 291, deaths: 32 },\n        nebraska: { cases: 484, deaths: 33 },\n        nevada: { cases: 33, deaths: 34 },\n        'new hampshire': { cases: 87, deaths: 35 },\n        'new jersey': { cases: 392, deaths: 36 },\n        'new mexico': { cases: 100, deaths: 27 },\n        'new york': { cases: 2, deaths: 1 },\n        'north carolina': { cases: 44, deaths: 11 },\n        'north dakota': { cases: 989, deaths: 1 },\n        'northern mariana islands': { cases: 88, deaths: 0 },\n        ohio: { cases: 383, deaths: 0 },\n        oklahoma: { cases: 22, deaths: 0 },\n        oregon: { cases: 989, deaths: 0 },\n        pennsylvania: { cases: 99, deaths: 0 },\n        'puerto rico': { cases: 11, deaths: 1 },\n        'rhode island': { cases: 22, deaths: 2 },\n        'south carolina': { cases: 33, deaths: 0 },\n        'south dakota': { cases: 44, deaths: 1 },\n        tennessee: { cases: 55, deaths: 0 },\n        texas: { cases: 66, deaths: 0 },\n        utah: { cases: 0, deaths: 0 },\n        vermont: { cases: 77, deaths: 1 },\n        'virgin islands': { cases: 98, deaths: 15 },\n        virginia: { cases: 22, deaths: 19 },\n        washington: { cases: 11, deaths: 1 },\n        'west virginia': { cases: 90, deaths: 1 },\n        wisconsin: { cases: 13, deaths: 1 },\n        wyoming: { cases: 12, deaths: 0 },\n      },\n    })\n  );\n}\n\nexport function fetchReportsByProvince(province, period) {\n  if (!province) return;\n  \n  return fetch(`https://corona.lmao.ninja/v2/historical/usacounties/${province}?lastdays=${period + 1}`)\n    .then(res => res.json())\n    .catch(e => console.error(e));\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { fetchReportsByCountry, fetchReportsByCountryAndDate, fetchReportsByProvince } from '../api/reports.api';\n\n// actions\nexport const fetchReportsByCountryAction = createAsyncThunk(\n  'reports/fetchByCountry',\n  async ({ country, period }) => {\n    return fetchReportsByCountry(country, period);\n  },\n);\n\nexport const fetchReportsByCountryAndDateAction = createAsyncThunk(\n  'reports/fetchByCountryAndDate',\n  async ({ country, period }) => {\n    return fetchReportsByCountryAndDate(country, period);\n  },\n);\n\nexport const fetchReportsByProvinceAction = createAsyncThunk(\n  'reports/fetchByProvince',\n  async ({ province, period }) => {\n    return fetchReportsByProvince(province, period);\n  },\n);\n\n// reducer\nconst initialState = {\n  loading: false,\n  countryProvinces: [],\n  countries: [],\n  provinces: [],\n};\nexport const reportsSlice = createSlice({\n  name: 'reports',\n  initialState,\n  extraReducers: builder => {\n    builder\n      .addCase(fetchReportsByCountryAction.pending, state => {\n        state.loading = true;\n      })\n      .addCase(fetchReportsByCountryAction.fulfilled, (state, action) => {\n        state.loading = false;\n        state.countries = action.payload;\n      })\n      .addCase(fetchReportsByCountryAction.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(fetchReportsByCountryAndDateAction.pending, state => {\n        state.loading = true;\n      })\n      .addCase(fetchReportsByCountryAndDateAction.fulfilled, (state, action) => {\n        state.loading = false;\n        state.countryProvinces = action.payload;\n      })\n      .addCase(fetchReportsByCountryAndDateAction.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(fetchReportsByProvinceAction.pending, state => {\n        state.loading = true;\n      })\n      .addCase(fetchReportsByProvinceAction.fulfilled, (state, action) => {\n        state.loading = false;\n        state.provinces = action.payload;\n      })\n      .addCase(fetchReportsByProvinceAction.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\n// selectors\nexport const selectLoading = state => state.reports.loading;\n\nexport const selectReportsByCountry = state => state.reports.countries.timeline;\n\nexport const selectReportsByCountryAndDate = state => state.reports.countryProvinces.states;\n\nexport const selectReportsByProvince = state => state.reports.provinces;\n\nexport default reportsSlice.reducer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress as MUICircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 100,\n    flexGrow: 1,\n    margin: theme.spacing(10),\n  },\n}));\n\nexport default function CircularProgress() {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.root}>\n      <MUICircularProgress />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { updateParamsDate, updateParamsTotal } from '../store/params.slice';\nimport { fetchReportsByCountryAndDateAction, selectReportsByCountry } from '../store/reports.slice';\n\nimport CircularProgress from './CircularProgress';\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nexport default function ChartCountry() {\n  const dispatch = useDispatch();\n  const data = useSelector(selectReportsByCountry);\n  const [state, setState] = useState({});\n  \n  useEffect(() => {\n    if (data) {\n      const labels = Object.keys(data.cases);\n      const cases = Object.values(data.cases);\n      const deaths = Object.values(data.deaths);\n  \n      labels.shift();\n      \n      const baseCase = cases.shift();\n      const baseDeath = deaths.shift();\n      \n      setState({\n        labels,\n        datasets: [\n          {\n            label: 'cases',\n            data: cases.map(curr => curr - baseCase || 0),\n            backgroundColor: 'rgb(63, 81, 181)',\n          },\n          {\n            label: 'deaths',\n            data: deaths.map(curr => curr - baseDeath || 0),\n            backgroundColor: 'rgb(231, 53, 90)',\n          },\n        ],\n      })\n    }\n  }, [data]);\n  \n  const getElementAtEvent = el => {\n    if (!el.length) return;\n  \n    const { index } = el[0];\n    \n    const totalCases = state.datasets[0].data[index];\n    const totalDeaths = state.datasets[1].data[index];\n    const date = state.labels[index];\n    \n    dispatch(updateParamsDate(date));\n    dispatch(updateParamsTotal({ totalCases, totalDeaths }));\n    dispatch(fetchReportsByCountryAndDateAction(date));\n  };\n  \n  if (!data) return <CircularProgress />;\n  \n  return (\n    <Bar data={state} options={options} getElementAtEvent={getElementAtEvent} />\n  )\n};\n","import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\n\nimport { selectReportsByCountryAndDate } from '../store/reports.slice';\n\nimport CircularProgress from './CircularProgress';\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nexport default function ChartDate() {\n  const data = useSelector(selectReportsByCountryAndDate);\n  const [state, setState] = useState({});\n  \n  useEffect(() => {\n    if (data) {\n      const labels = Object.keys(data);\n      const {cases, deaths} = Object.values(data).reduce((acc, curr) => ({\n        cases: acc.cases.concat(curr.cases),\n        deaths: acc.deaths.concat(curr.deaths),\n      }), { cases: [], deaths: [] });\n  \n      setState({\n        labels,\n        datasets: [\n          {\n            label: 'cases',\n            data: cases,\n            backgroundColor: 'rgb(63, 81, 181)',\n          },\n          {\n            label: 'deaths',\n            data: deaths,\n            backgroundColor: 'rgb(231, 53, 90)',\n          },\n        ],\n      })\n    }\n  }, [data]);\n  \n  if (!data) return <CircularProgress />;\n  \n  return (\n    <Bar data={state} options={options} />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\n\nimport { selectReportsByProvince } from '../store/reports.slice';\n\nimport CircularProgress from './CircularProgress';\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nexport default function ChartProvince() {\n  const data = useSelector(selectReportsByProvince);\n  const [state, setState] = useState({});\n  \n  useEffect(() => {\n    if (data?.length) {\n      const formattedData = data.reduce((acc, curr) => {\n        const labels = Object.keys(curr.timeline.cases);\n        const cases = Object.values(curr.timeline.cases);\n        const deaths = Object.values(curr.timeline.deaths);\n  \n        labels.shift();\n\n        const baseCase = cases.shift();\n        const baseDeath = deaths.shift();\n        \n        const newCases = cases.map(curr => curr - baseCase || 0);\n        const newDeaths = deaths.map(curr => curr - baseDeath || 0);\n        \n        labels.forEach((curr, currIndex) => {\n          acc.cases[curr] = acc.cases[curr] ? acc.cases[curr] + newCases[currIndex] : newCases[currIndex];\n          acc.deaths[curr] = acc.deaths[curr] ? acc.deaths[curr] + newDeaths[currIndex] : newDeaths[currIndex];\n        });\n        \n        return acc;\n      }, { cases: {}, deaths: {} });\n  \n      const formattedLabels = Object.keys(formattedData.cases);\n      const formattedCases = Object.values(formattedData.cases);\n      const formattedDeaths = Object.values(formattedData.deaths);\n      \n      setState({\n        labels: formattedLabels,\n        datasets: [\n          {\n            label: 'cases',\n            data: formattedCases,\n            backgroundColor: 'rgb(63, 81, 181)',\n          },\n          {\n            label: 'deaths',\n            data: formattedDeaths,\n            backgroundColor: 'rgb(231, 53, 90)',\n          },\n        ],\n      })\n    }\n  }, [data]);\n  \n  if (!data) return <CircularProgress />;\n  \n  return (\n    <Bar data={state} options={options} />\n  )\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Typography } from '@material-ui/core';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { updateParamsDate } from '../store/params.slice';\n\nimport ChartCountry from './ChartCountry';\nimport ChartDate from './ChartDate';\nimport ChartProvince from './ChartProvince';\nimport Title from './Title';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function Chart({ params }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  \n  if (params.date) {\n    return (\n      <>\n        <Title>\n          <IconButton color=\"primary\" className={classes.icon} onClick={() => dispatch(updateParamsDate(''))}>\n            <ArrowBackIcon/>\n          </IconButton>\n          Results for {params.date} with total {params.totalCases} cases ({params.totalDeaths} deaths)\n        </Title>\n        <ChartDate/>\n      </>\n    );\n  }\n  \n  return (\n    <>\n      <Title>Results</Title>\n      {params.province ? <ChartProvince/> : <ChartCountry/>}\n    </>\n  );\n}\n\nChart.propTypes = {\n  params: PropTypes.shape({\n    country: PropTypes.string,\n    date: PropTypes.string,\n    period: PropTypes.number,\n    province: PropTypes.string,\n    totalCases: PropTypes.number,\n    totalDeaths: PropTypes.number,\n  }),\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { fetchProvinces } from '../api/provinces.api'\n\n// actions\nexport const fetchProvincesAction = createAsyncThunk(\n  'provinces/fetch',\n  async () => {\n    return fetchProvinces();\n  }\n);\n\n// reducer\nconst initialState = {\n  error: undefined,\n  loading: false,\n  provinces: [],\n};\nexport const provincesSlice = createSlice({\n  name: 'provinces',\n  initialState,\n  extraReducers: builder => {\n    builder\n      .addCase(fetchProvincesAction.pending, state => {\n        state.loading = true;\n      })\n      .addCase(fetchProvincesAction.fulfilled, (state, action) => {\n        state.loading = false;\n        state.provinces = action.payload?.map(curr => ({ label: curr, value: curr }));\n      })\n      .addCase(fetchProvincesAction.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\n// selectors\nexport const selectProvinces = state => state.provinces.provinces;\n\nexport default provincesSlice.reducer;\n","export function fetchProvinces() {\n  return fetch('https://corona.lmao.ninja/v2/historical/usacounties')\n    .then(res => res.json())\n    .catch(e => console.error(e));\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { FormControl, InputLabel, makeStyles, Select, TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab';\n\nimport { updateParams } from '../store/params.slice'\nimport { fetchProvincesAction, selectProvinces } from '../store/provinces.slice'\nimport { fetchReportsByCountryAction, fetchReportsByProvinceAction } from '../store/reports.slice'\n\nconst countries = [\n  { value: 'USA', label: 'USA' },\n];\n\nconst periods = [\n  { value: 7, label: 'last 7 days' },\n  { value: 30, label: 'last 1 month' },\n  { value: 1000, label: 'all time' },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginBottom: theme.spacing(1),\n    width: '100%',\n  },\n}));\n\nexport default function Form() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const provinces = useSelector(selectProvinces);\n  \n  const [state, setState] = React.useState({\n    country: 'USA',\n    province: undefined,\n    period: 7,\n  });\n  \n  useEffect(() => {\n    dispatch(fetchProvincesAction());\n  }, []);\n  \n  useEffect(() => {\n    dispatch(fetchReportsByCountryAction({country: state.country, period: +state.period}));\n  }, [state.country, state.period]);\n  \n  useEffect(() => {\n    dispatch(fetchReportsByProvinceAction({province: state.province, period: +state.period}));\n  }, [state.province, state.period]);\n  \n  useEffect(() => {\n    dispatch(updateParams(state));\n  }, [state.country, state.period, state.province])\n  \n  const formik = useFormik({\n    initialValues: state,\n    onSubmit: () => {\n      dispatch(fetchReportsByCountryAction({country: state.country, period: +state.period}));\n      dispatch(fetchReportsByProvinceAction({province: state.province, period: +state.period}));\n    },\n  });\n  \n  const handleChange = (e, value, name) => {\n    const newState = {\n      ...state,\n      [name]: name === 'period' ? +value : value,\n    };\n    setState(newState);\n    formik.submitForm();\n  };\n  \n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <FormControl className={classes.formControl} variant=\"outlined\">\n          <InputLabel htmlFor=\"country\">Country</InputLabel>\n          <Select\n            id=\"country\"\n            label=\"Country\"\n            value={state.country}\n            onChange={e => handleChange(e, e.target.value, 'country')}\n            disabled\n            native\n          >\n            {countries.map(curr => <option key={`country-${curr.value}`} value={curr.value}>{curr.label}</option>)}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl} variant=\"outlined\">\n          <Autocomplete\n            id=\"state\"\n            options={provinces}\n            getOptionLabel={option => option.label}\n            onChange={(e, value) => handleChange(e, value?.value, 'province')}\n            renderInput={params => <TextField {...params} label=\"State\" variant=\"outlined\" className={classes.capitalize} />}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl} variant=\"outlined\">\n          <InputLabel htmlFor=\"country\">Period</InputLabel>\n          <Select\n            id=\"period\"\n            label=\"Period\"\n            value={state.period}\n            onChange={e => handleChange(e, e.target.value, 'period')}\n            native\n          >\n            {periods.map(curr => <option key={`period-${curr.value}`} value={curr.value}>{curr.label}</option>)}\n          </Select>\n        </FormControl>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux'\n\nimport { AppBar, CssBaseline, Container, Grid, Paper, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Chart from './components/Chart';\nimport Form from './components/Form';\nimport Title from './components/Title';\nimport { selectParams } from './store/params.slice';\n\nconst useStyles = makeStyles((theme) => ({\n  appBarSpacer: theme.mixins.toolbar,\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  root: {\n    display: 'flex',\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const params = useSelector(selectParams);\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\">\n        <Toolbar>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\n            Covid Tracker\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={5} lg={5}>\n              <Title>Search params</Title>\n              <Form/>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Chart params={params} />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport paramsReducer from './params.slice';\nimport provincesReducer from './provinces.slice';\nimport reportsReducer from './reports.slice';\n\nexport const store = configureStore({\n  reducer: {\n    params: paramsReducer,\n    provinces: provincesReducer,\n    reports: reportsReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}